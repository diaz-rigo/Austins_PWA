name: PWA CI/CD Workflow

on:
  push:
    branches:
      - main
      - release/*
      - development
  pull_request:
    branches:
      - main
      - release/*
      - development
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x] # Mantén la misma versión de Node.js

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run lint
        run: npm run lint

      - name: Build the PWA
        run: npm run build --prod

      - name: Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x' # Mantén la misma versión aquí también

      - name: Install dependencies
        run: npm install

      - name: Build the PWA
        run: npm run build --prod

      - name: Deploy to Firebase
        run: |
          npm install -g firebase-tools
          firebase deploy --token ${{ secrets.FIREBASE_DEPLOY_TOKEN }}
